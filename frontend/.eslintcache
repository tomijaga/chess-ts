[{"/home/jagatomi12/projects/chess-ts/frontend/src/index.tsx":"1","/home/jagatomi12/projects/chess-ts/frontend/src/reportWebVitals.ts":"2","/home/jagatomi12/projects/chess-ts/frontend/src/App.tsx":"3","/home/jagatomi12/projects/chess-ts/frontend/src/containers/Board.tsx":"4","/home/jagatomi12/projects/chess-ts/frontend/src/components/Tile.tsx":"5","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/index.tsx":"6","/home/jagatomi12/projects/chess-ts/frontend/src/types/Board.ts":"7","/home/jagatomi12/projects/chess-ts/frontend/src/types/Side.ts":"8","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/index.tsx":"9","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/index.tsx":"10","/home/jagatomi12/projects/chess-ts/frontend/src/context/Board.tsx":"11","/home/jagatomi12/projects/chess-ts/frontend/src/types/Pieces.ts":"12","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/bishop.tsx":"13","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/king.tsx":"14","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/knight.tsx":"15","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/queen.tsx":"16","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/pawn.tsx":"17","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/rook.tsx":"18","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/bishop.tsx":"19","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/king.tsx":"20","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/knight.tsx":"21","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/queen.tsx":"22","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/pawn.tsx":"23","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/rook.tsx":"24","/home/jagatomi12/projects/chess-ts/frontend/src/usefull-fns/Array.tsx":"25","/home/jagatomi12/projects/chess-ts/frontend/src/usefull-fns/Object.tsx":"26"},{"size":500,"mtime":1611121275299,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1611004855610,"results":"29","hashOfConfig":"28"},{"size":499,"mtime":1611378979513,"results":"30","hashOfConfig":"28"},{"size":7258,"mtime":1612608309364,"results":"31","hashOfConfig":"28"},{"size":1752,"mtime":1612607864464,"results":"32","hashOfConfig":"28"},{"size":90,"mtime":1611397018033,"results":"33","hashOfConfig":"28"},{"size":17928,"mtime":1612609155524,"results":"34","hashOfConfig":"28"},{"size":2734,"mtime":1612605599134,"results":"35","hashOfConfig":"28"},{"size":1223,"mtime":1611396946213,"results":"36","hashOfConfig":"28"},{"size":1232,"mtime":1611397050933,"results":"37","hashOfConfig":"28"},{"size":243,"mtime":1611169507938,"results":"38","hashOfConfig":"28"},{"size":1159,"mtime":1611294583193,"results":"39","hashOfConfig":"28"},{"size":1123,"mtime":1611045936795,"results":"40","hashOfConfig":"28"},{"size":1037,"mtime":1611045936795,"results":"41","hashOfConfig":"28"},{"size":1554,"mtime":1611045936795,"results":"42","hashOfConfig":"28"},{"size":1403,"mtime":1611045936785,"results":"43","hashOfConfig":"28"},{"size":1207,"mtime":1611045936795,"results":"44","hashOfConfig":"28"},{"size":1213,"mtime":1611045936785,"results":"45","hashOfConfig":"28"},{"size":1683,"mtime":1611045936795,"results":"46","hashOfConfig":"28"},{"size":1502,"mtime":1611045936785,"results":"47","hashOfConfig":"28"},{"size":2381,"mtime":1611045936795,"results":"48","hashOfConfig":"28"},{"size":1495,"mtime":1611045936795,"results":"49","hashOfConfig":"28"},{"size":1794,"mtime":1611045936795,"results":"50","hashOfConfig":"28"},{"size":1898,"mtime":1611045936795,"results":"51","hashOfConfig":"28"},{"size":333,"mtime":1611192106834,"results":"52","hashOfConfig":"28"},{"size":103,"mtime":1611192011004,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"e7cpal",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/jagatomi12/projects/chess-ts/frontend/src/index.tsx",[],["113","114"],"/home/jagatomi12/projects/chess-ts/frontend/src/reportWebVitals.ts",[],"/home/jagatomi12/projects/chess-ts/frontend/src/App.tsx",["115","116","117","118"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Board from \"containers/Board\";\nimport { classic } from \"designs/pieces\";\nimport { BoardClass } from \"types/Board\";\n\nimport { BoardContext } from \"context/Board\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <BoardContext.Provider> */}\n          <Board />\n        {/* </BoardContext.Provider> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/jagatomi12/projects/chess-ts/frontend/src/containers/Board.tsx",["119","120","121","122","123","124","125","126","127","128"],"/home/jagatomi12/projects/chess-ts/frontend/src/components/Tile.tsx",["129","130"],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/index.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/types/Board.ts",["131","132","133","134"],"/home/jagatomi12/projects/chess-ts/frontend/src/types/Side.ts",["135"],"import { clone } from \"usefull-fns/Object\";\nimport { fillArray } from \"usefull-fns/Array\";\nimport { IDesignPieces } from \"./Design\";\nimport { Bishop, King, Knight, Pawn, Piece, Queen, Rook } from \"./Pieces\";\n\nexport class SideClass {\n  pawns: Pawn[] = [];\n  knights: Knight[] = [];\n  king: King;\n  queen: Queen;\n  bishops: Bishop[] = [];\n  rooks: Rook[] = [];\n  capturedPieces: String[] = [];\n  onCheck:boolean = false;\n\n  constructor(design: IDesignPieces, side: number) {\n    let side_string: string = \"white\";\n\n    if (side === 1) {\n      side_string = \"black\";\n    }\n    if (side_string === \"white\") {\n      this.king = new King(design[\"white\"], \"white\");\n      this.queen = new Queen(design[\"white\"], \"white\");\n      this.pawns[0] = new Pawn(design[\"white\"], \"white\");\n      this.pawns[1] = new Pawn(design[\"white\"], \"white\");\n      this.pawns[2] = new Pawn(design[\"white\"], \"white\");\n      this.pawns[3] = new Pawn(design[\"white\"], \"white\");\n      this.pawns[4] = new Pawn(design[\"white\"], \"white\");\n      this.pawns[5] = new Pawn(design[\"white\"], \"white\");\n      this.pawns[6] = new Pawn(design[\"white\"], \"white\");\n      this.pawns[7] = new Pawn(design[\"white\"], \"white\");\n\n      this.knights = fillArray<Pawn>(new Knight(design[\"white\"], \"white\"), 2);\n      this.rooks = fillArray<Pawn>(new Rook(design[\"white\"], \"white\"), 2);\n      this.bishops = fillArray<Pawn>(new Bishop(design[\"white\"], \"white\"), 2);\n    } else {\n      this.king = new King(design[\"black\"], \"black\");\n      this.queen = new Queen(design[\"black\"], \"black\");\n      this.pawns[0] = new Pawn(design[\"black\"], \"black\");\n      this.pawns[1] = new Pawn(design[\"black\"], \"black\");\n      this.pawns[2] = new Pawn(design[\"black\"], \"black\");\n      this.pawns[3] = new Pawn(design[\"black\"], \"black\");\n      this.pawns[4] = new Pawn(design[\"black\"], \"black\");\n      this.pawns[5] = new Pawn(design[\"black\"], \"black\");\n      this.pawns[6] = new Pawn(design[\"black\"], \"black\");\n      this.pawns[7] = new Pawn(design[\"black\"], \"black\");\n      this.knights = fillArray<Pawn>(new Knight(design[\"black\"], \"black\"), 2);\n      this.rooks = fillArray<Pawn>(new Rook(design[\"black\"], \"black\"), 2);\n      this.bishops = fillArray<Pawn>(new Bishop(design[\"black\"], \"black\"), 2);\n    }\n  }\n\n  capture = (piece: String) => {\n    this.capturedPieces.push(piece);\n  };\n\n  getPieces = (): Piece[] => {\n    return [\n      this.king,\n      this.queen,\n      ...this.bishops,\n      ...this.knights,\n      ...this.pawns,\n      ...this.rooks,\n    ];\n  };\n}\n\nexport enum SideEnum {\n  white,\n  black,\n}\n\nexport const maskSideInEnum = (side: string) =>\n  side === \"white\"\n    ? 0\n    : side === \"black\"\n    ? 1\n    : () => {\n        throw new Error('Expecting \"white\" or \"black\" ');\n      };\n","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/index.tsx",["136","137"],"import { BishopIcon } from \"./icons/bishop\";\nimport { KingIcon } from \"./icons/king\";\nimport { KnightIcon } from \"./icons/knight\";\nimport { QueenIcon } from \"./icons/queen\";\nimport { PawnIcon } from \"./icons/pawn\";\nimport { RookIcon } from \"./icons/rook\";\n\nimport { IDesignPieces } from \"types/Design\";\n\nexport const classic: IDesignPieces = {\n  [\"black\"]: {\n    bishop: <BishopIcon className=\"pieces black_pieces\" height={70}/>,\n    king: <KingIcon className=\"pieces black_pieces\"  height={70} />,\n    queen: <QueenIcon className=\"pieces black_pieces\" height={70} />,\n    knight: <KnightIcon className=\"pieces black_pieces\" height={70} />,\n    pawn: <PawnIcon className=\"pieces black_pieces\" height={70} />,\n    rook: <RookIcon className=\"pieces black_pieces\" height={70} />,\n  },\n  [\"white\"]: {\n    bishop: <BishopIcon className=\"pieces white_pieces\" height={70} />,\n    king: <KingIcon className=\"pieces white_pieces\" height={70} />,\n    queen: <QueenIcon className=\"pieces white_pieces\" height={70} />,\n    knight: <KnightIcon className=\"pieces white_pieces\" height={70} />,\n    pawn: <PawnIcon className=\"pieces white_pieces\" height={70} />,\n    rook: <RookIcon className=\"pieces white_pieces\" height={70} />,\n  },\n};\n","/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/index.tsx",["138","139"],"import { BishopIcon } from \"./icons/bishop\";\nimport { KingIcon } from \"./icons/king\";\nimport { KnightIcon } from \"./icons/knight\";\nimport { QueenIcon } from \"./icons/queen\";\nimport { PawnIcon } from \"./icons/pawn\";\nimport { RookIcon } from \"./icons/rook\";\n\nimport { IDesignPieces } from \"types/Design\";\n\nexport const classic_outlined: IDesignPieces = {\n  [\"black\"]: {\n    bishop: <BishopIcon className=\"pieces black_pieces\" height={70}/>,\n    king: <KingIcon className=\"pieces black_pieces\"  height={70} />,\n    queen: <QueenIcon className=\"pieces black_pieces\" height={70} />,\n    knight: <KnightIcon className=\"pieces black_pieces\" height={70} />,\n    pawn: <PawnIcon className=\"pieces black_pieces\" height={70} />,\n    rook: <RookIcon className=\"pieces black_pieces\" height={70} />,\n  },\n  [\"white\"]: {\n    bishop: <BishopIcon className=\"pieces white_pieces\" height={70} />,\n    king: <KingIcon className=\"pieces white_pieces\" height={70} />,\n    queen: <QueenIcon className=\"pieces white_pieces\" height={70} />,\n    knight: <KnightIcon className=\"pieces white_pieces\" height={70} />,\n    pawn: <PawnIcon className=\"pieces white_pieces\" height={70} />,\n    rook: <RookIcon className=\"pieces white_pieces\" height={70} />,\n  },\n};\n","/home/jagatomi12/projects/chess-ts/frontend/src/context/Board.tsx",["140"],"import { createContext } from \"react\";\nimport { BoardClass, ITilePosition, SelectedTile } from \"types/Board\";\n\nexport const BoardContext = createContext({} as BoardClass);\n\nexport const SelectedTileContext = createContext({} as SelectedTile);\n","/home/jagatomi12/projects/chess-ts/frontend/src/types/Pieces.ts",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/bishop.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/king.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/knight.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/queen.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/pawn.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic/icons/rook.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/bishop.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/king.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/knight.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/queen.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/pawn.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/designs/pieces/classic_outlined/icons/rook.tsx",[],"/home/jagatomi12/projects/chess-ts/frontend/src/usefull-fns/Array.tsx",["141"],"import { Pawn } from \"types/Pieces\";\nimport { clone } from \"usefull-fns/Object\";\n\nexport const fillArray = <T extends unknown>(item: any, size: number): T[] => {\n  const arr: T[] = [];\n\n  for (let i = 0; i < size; i++) {\n    if (typeof item === \"object\") {\n      arr.push(clone(item));\n    }\n    arr.push(item);\n  }\n  return arr;\n};\n","/home/jagatomi12/projects/chess-ts/frontend/src/usefull-fns/Object.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":12},{"ruleId":"146","severity":1,"message":"150","line":6,"column":10,"nodeType":"148","messageId":"149","endLine":6,"endColumn":17},{"ruleId":"146","severity":1,"message":"151","line":7,"column":10,"nodeType":"148","messageId":"149","endLine":7,"endColumn":20},{"ruleId":"146","severity":1,"message":"152","line":9,"column":10,"nodeType":"148","messageId":"149","endLine":9,"endColumn":22},{"ruleId":"146","severity":1,"message":"153","line":2,"column":3,"nodeType":"148","messageId":"149","endLine":2,"endColumn":5},{"ruleId":"146","severity":1,"message":"154","line":4,"column":3,"nodeType":"148","messageId":"149","endLine":4,"endColumn":20},{"ruleId":"146","severity":1,"message":"155","line":5,"column":3,"nodeType":"148","messageId":"149","endLine":5,"endColumn":13},{"ruleId":"146","severity":1,"message":"156","line":20,"column":10,"nodeType":"148","messageId":"149","endLine":20,"endColumn":24},{"ruleId":"146","severity":1,"message":"157","line":20,"column":26,"nodeType":"148","messageId":"149","endLine":20,"endColumn":34},{"ruleId":"146","severity":1,"message":"158","line":21,"column":19,"nodeType":"148","messageId":"149","endLine":21,"endColumn":35},{"ruleId":"146","severity":1,"message":"152","line":23,"column":10,"nodeType":"148","messageId":"149","endLine":23,"endColumn":22},{"ruleId":"146","severity":1,"message":"159","line":50,"column":26,"nodeType":"148","messageId":"149","endLine":50,"endColumn":44},{"ruleId":"160","severity":1,"message":"161","line":93,"column":6,"nodeType":"162","endLine":101,"endColumn":4,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":110,"column":59,"nodeType":"166","messageId":"167","endLine":110,"endColumn":61},{"ruleId":"146","severity":1,"message":"168","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":11},{"ruleId":"146","severity":1,"message":"169","line":27,"column":9,"nodeType":"148","messageId":"149","endLine":27,"endColumn":14},{"ruleId":"146","severity":1,"message":"170","line":2,"column":3,"nodeType":"148","messageId":"149","endLine":2,"endColumn":49},{"ruleId":"146","severity":1,"message":"171","line":3,"column":3,"nodeType":"148","messageId":"149","endLine":3,"endColumn":17},{"ruleId":"146","severity":1,"message":"172","line":8,"column":10,"nodeType":"148","messageId":"149","endLine":8,"endColumn":15},{"ruleId":"146","severity":1,"message":"173","line":302,"column":13,"nodeType":"148","messageId":"149","endLine":302,"endColumn":23},{"ruleId":"146","severity":1,"message":"172","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":15},{"ruleId":"174","severity":1,"message":"175","line":11,"column":3,"nodeType":"176","messageId":"177","endLine":18,"endColumn":4,"fix":"178"},{"ruleId":"174","severity":1,"message":"179","line":19,"column":3,"nodeType":"176","messageId":"177","endLine":26,"endColumn":4,"fix":"180"},{"ruleId":"174","severity":1,"message":"175","line":11,"column":3,"nodeType":"176","messageId":"177","endLine":18,"endColumn":4,"fix":"181"},{"ruleId":"174","severity":1,"message":"179","line":19,"column":3,"nodeType":"176","messageId":"177","endLine":26,"endColumn":4,"fix":"182"},{"ruleId":"146","severity":1,"message":"183","line":2,"column":22,"nodeType":"148","messageId":"149","endLine":2,"endColumn":35},{"ruleId":"146","severity":1,"message":"184","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":14},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'classic' is defined but never used.","'BoardClass' is defined but never used.","'BoardContext' is defined but never used.","'FC' is defined but never used.","'MouseEventHandler' is defined but never used.","'useContext' is defined but never used.","'maskSideInEnum' is defined but never used.","'SideEnum' is defined but never used.","'classic_outlined' is defined but never used.","'set_disable_pieces' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'map_tile_data_to_jsx'. Either include it or remove the dependency array.","ArrayExpression",["187"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CSS' is defined but never used.","'board' is assigned a value but never used.","'collapseTextChangeRangesAcrossMultipleVersions' is defined but never used.","'VoidExpression' is defined but never used.","'clone' is defined but never used.","'kingsMoves' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"black\"] found.","Property","unnecessarilyComputedProperty",{"range":"188","text":"189"},"Unnecessarily computed property [\"white\"] found.",{"range":"190","text":"191"},{"range":"192","text":"189"},{"range":"193","text":"191"},"'ITilePosition' is defined but never used.","'Pawn' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},[346,355],"\"black\"",[784,793],"\"white\"",[355,364],[793,802],"Update the dependencies array to be: [tiles_data, selected_tile, black_king_on_check, white_king_on_check, player_side, turn_to_play, last_move, map_tile_data_to_jsx]",{"range":"196","text":"197"},[2372,2512],"[tiles_data, selected_tile, black_king_on_check, white_king_on_check, player_side, turn_to_play, last_move, map_tile_data_to_jsx]"]