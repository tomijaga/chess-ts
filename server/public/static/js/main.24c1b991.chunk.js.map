{"version":3,"sources":["context/Board.tsx","components/ClockTimer.tsx","designs/pieces/classic/icons/bishop.tsx","designs/pieces/classic/icons/king.tsx","designs/pieces/classic/icons/knight.tsx","designs/pieces/classic/icons/queen.tsx","designs/pieces/classic/icons/pawn.tsx","designs/pieces/classic/icons/rook.tsx","designs/pieces/classic/index.tsx","designs/pieces/classic_outlined/icons/bishop.tsx","designs/pieces/classic_outlined/icons/king.tsx","designs/pieces/classic_outlined/icons/knight.tsx","designs/pieces/classic_outlined/icons/queen.tsx","designs/pieces/classic_outlined/icons/pawn.tsx","designs/pieces/classic_outlined/icons/rook.tsx","utils/Chess.tsx","designs/pieces/classic_outlined/index.tsx","components/Tile.tsx","components/Board.tsx","containers/Boards/DisabledBoard.tsx","containers/Boards/SocketIOBoard.tsx","containers/Boards/TwoPlayerBoard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GameClientContext","createContext","TileDataContext","SocketIOContext","ClockTimer","turn_to_play","player_side","onTimeUp","children","useState","startTime","player_1_time","set_player_1_time","player_2_time","set_player_2_time","useEffect","interval","setInterval","calculateTime","winingSide","prevTime","clearInterval","timer","time","style","width","background","borderRadius","fontSize","padding","convertToTime","timestamp","seconds","display","flexDirection","alignItems","BishopIcon","props","xmlns","viewBox","height","d","fillRule","fill","KingIcon","KnightIcon","QueenIcon","PawnIcon","RookIcon","classic","bishop","className","king","queen","knight","pawn","rook","possibleEnPassant","from","to","piece","type","rank","file","PossibleMove","capture","position","left","Tile","show_move","tile","onClick","on_check","moved_last","useContext","lastMove","kingOnCheck","selectedTile","playerSide","undefined","prevSquare","postSquare","showEnPassant","clsx","oddAlphabets","includes","determineVariant","justifyContent","side","name","white","black","tilePiece","top","bottom","right","nodeEnvState","dev","prod","Board","gameId","onGameEnd","clockTimer","disableBoard","game_id","disable_pieces","set_disable_pieces","tiles_as_jsx","set_tiles_as_jsx","selected_tile","set_selected_tile","set_turn_to_play","last_move","set_last_move","movesToDisplay","setMovesToDisplay","history","setHistory","setKingOnCheck","setIsGameOver","setGameResults","gameClient","socket","gameOver","endedBy","results","console","log","map_tile_data_to_jsx","tilesDiv","game","board","squares","map","i","possibleMoves","validMoves","move","src","showPossibleMoveOnThisTile","transform","event","moves","getStatus","notatedMoves","pgn","Object","keys","find","key","dest","prev","emit","next_turn","updateView","length","on","attackingSquare","kingSquare","square","boardStyle","gridTemplateColumns","gridTemplateRows","margin","flexWrap","moveHistory","tempMoves","undo","pop","Provider","value","isCheck","DisabledBoard","chess","createSimple","create","PGN","SocketIOBoard","startGame","turn","algebraic","io","TwoPlayerBoard","activity","setActivity","isFormFilled","setIsFormFilled","setGameId","setPlayerSide","opponent","setOpponent","username","setUsername","setStartGame","Form","useForm","form","tip","title","labelCol","span","wrapperCol","layout","initialValues","onValuesChange","choice","onFinish","values","gameSettings","finishValues","sides","disconnect","Error","Item","label","Group","Button","rules","required","message","placeholder","allowClear","Option","htmlType","App","boardType","setBoardType","games","selectedGame","setSelectedGame","backgroundColor","cursor","color","_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24c1b991.chunk.js","sourcesContent":["import { createContext } from \"react\";\nimport { GameClient } from \"chess\";\nimport { BoardClass, ITilePosition, SelectedTile, TileData } from \"types/Board\";\n\nexport const BoardContext = createContext({} as BoardClass);\n\nexport const SelectedTileContext = createContext({} as SelectedTile);\n\nexport const GameClientContext = createContext({} as GameClient);\n\nexport const TileDataContext = createContext({} as TileData);\n\nexport const SocketIOContext = createContext({} as SocketIOClient.Socket);\n","import React, { FC, useState, useEffect } from \"react\";\n\nimport { Side } from \"types/Board\";\n\nconst ClockTimer: FC<{\n  player_side: string;\n  turn_to_play: string;\n  onTimeUp(winningSide: Side): void;\n}> = ({ turn_to_play, player_side, onTimeUp, children }) => {\n  const [startTime, setStartTime] = useState(60 * 10);\n  const [player_1_time, set_player_1_time] = useState(startTime);\n  const [player_2_time, set_player_2_time] = useState(startTime);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (player_side !== \"\") {\n        const calculateTime = (winingSide: Side) => (prevTime: number) => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            onTimeUp(winingSide);\n          }\n          return prevTime - 1;\n        };\n\n        if (turn_to_play === \"white\") {\n          set_player_1_time(calculateTime(\"white\"));\n        } else if (turn_to_play === \"black\") {\n          set_player_2_time(calculateTime(\"black\"));\n        }\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [turn_to_play, player_side]);\n\n  const timer = (time: string) => (\n    <div\n      style={{\n        width: \"100px\",\n        background: \"rgba(0,0,0, 0.2)\",\n        borderRadius: \"5px\",\n        fontSize: \"20px\",\n        padding: \"5px\",\n      }}\n    >\n      {time}\n    </div>\n  );\n\n  const convertToTime = (timestamp: number) => {\n    const seconds = timestamp % 60;\n    const minutes = ((timestamp / 60) | 0) % 60;\n\n    return minutes + \":\" + (seconds <= 0 ? \"0\" + seconds : seconds);\n  };\n\n  const orientTimer = () => {\n    if (player_side === \"white\") {\n      return (\n        <>\n          {timer(convertToTime(player_2_time))}\n          {children}\n          {timer(convertToTime(player_1_time))}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {timer(convertToTime(player_1_time))}\n          {children}\n          {timer(convertToTime(player_2_time))}\n        </>\n      );\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-end\",\n      }}\n    >\n      {orientTimer()}\n    </div>\n  );\n};\n\nexport default ClockTimer;\n","import * as React from \"react\";\n\nexport const BishopIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M10 10.47a8.675 8.675 0 011.498-3.683 7.575 7.575 0 002.948 4.046 1 1 0 101.108-1.665 6.506 6.506 0 01-2.517-4.704 64.574 64.574 0 013.208-4.11.997.997 0 011.51.001C21.665 4.989 24 8.771 24 10.47A6.436 6.436 0 0120.688 16h-7.376A6.436 6.436 0 0110 10.47zM8 20v-1c0-.552.448-1 1-1h16c.552 0 1 .448 1 1v1c0 .552-.448 1-1 1H9c-.552 0-1-.448-1-1zm4 3h10v11H12V23zM8 37c0-.552.448-1 1-1h16c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H9c-.552 0-1-.448-1-1v-2zm-4.933 9.475a2 2 0 011.156-2.615L9.183 42h15.635l4.96 1.86a2 2 0 011.155 2.615L30.323 48H3.677l-.61-1.525zM34 55c0 .552-.448 1-1 1h-1v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H8v-2a1 1 0 00-2 0v2H4v-2a1 1 0 00-2 0v2H1c-.552 0-1-.448-1-1v-4c0-.552.448-1 1-1h32c.552 0 1 .448 1 1v4z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const KingIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <g fillRule=\"nonzero\" fill=\"currentColor\">\n      <path d=\"M10.072 10.914a.837.837 0 01.018-.717c.155-.293.43-.505.753-.579L17 8.033l6.157 1.585c.324.074.598.286.753.58.113.223.12.487.018.716L22.163 15H11.837l-1.765-4.086zM8 18c0-.552.448-1 1-1h16a1 1 0 010 2H9c-.552 0-1-.448-1-1zm4 3h10v17H12V21zM9 40h16a1 1 0 010 2H9a1 1 0 010-2zm-5.933 8.475a2 2 0 011.156-2.615L9.183 44h15.635l4.96 1.86a2 2 0 011.155 2.615L30.323 50H3.677l-.61-1.525zM34 57c0 .552-.448 1-1 1h-1v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H8v-2a1 1 0 00-2 0v2H4v-2a1 1 0 00-2 0v2H1c-.552 0-1-.448-1-1v-4c0-.552.448-1 1-1h32c.552 0 1 .448 1 1v4zM16 7.2V1a1 1 0 012 0v6.2L17 7l-1 .2z\" />\n      <path d=\"M19 4h-4a1 1 0 010-2h4a1 1 0 010 2z\" />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const KnightIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M9 41.001c-.552 0-1-.447-1-1v-2c0-.552.448-.999 1-1h16c.552.001 1 .448 1 1v2c0 .553-.448 1-1 1H9zm20.055-7.097A2.004 2.004 0 0127.215 35h-6.654c.038-.042.08-.08.116-.123a5.987 5.987 0 001.339-4.863l-1.41-8.455 8.245 10.526c.423.512.503 1.226.204 1.82zM5.123 9.573a9.9 9.9 0 015.305-3.959 22.518 22.518 0 00-6 12.228c-.822-3.35-.607-6.128.695-8.27zm.897 12.894c.17-9.708 4.758-14.706 7.114-16.629-.012.257-.02.52-.02.793a1 1 0 002 0 10.22 10.22 0 011.155-5.142c.192-.312.535-.498.9-.489l2.972-.053v2.257a1.954 1.954 0 001.128 1.752l2.643 1.247a14.917 14.917 0 014.598 3.351l3.092 3.336a1.758 1.758 0 01-.083 2.467l-1.49 1.37-2.333-1.468c-1.388-.873-3.787-1.482-7.129-1.81a3.025 3.025 0 00-2.949 1.523 2.785 2.785 0 00.258 3.1l.155.199 2.012 12.072a3.991 3.991 0 01-.893 3.242A4.047 4.047 0 0116 35H8.09a1.935 1.935 0 01-2.012-1.842V22.737a.99.99 0 00-.057-.27zm-2.953 25.01a2 2 0 011.156-2.616l4.96-1.86h15.635l4.96 1.86a2 2 0 011.155 2.616L30.323 49H3.677l-.61-1.525zM34 56c0 .553-.448 1-1 1h-1v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H8v-2a1 1 0 00-2 0v2H4v-2a1 1 0 00-2 0v2H1c-.552 0-1-.447-1-1v-4c0-.552.448-.999 1-1h1.997l.003.001h30c.552 0 1 .447 1 1v4z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const QueenIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <g fillRule=\"nonzero\" fill=\"currentColor\">\n      <path d=\"M17 0a2.006 2.006 0 00-2 2c-.002.413.128.816.37 1.15 1.077-.2 2.183-.2 3.26 0 .242-.334.372-.737.37-1.15a2.006 2.006 0 00-2-2zm-5.2 6.94c-.02.02-.05.04-.07.06h.09l-.02-.06zm10.4 0l-.02.06h.09c-.02-.02-.05-.04-.07-.06zm0 0l-.02.06h.09c-.02-.02-.05-.04-.07-.06zM25 15H9a1 1 0 000 2h16a1 1 0 000-2zm-13 4v17h10V19H12zm13 19H9a1 1 0 000 2h16a1 1 0 000-2zm5.91 6.93a1.981 1.981 0 00-1.13-1.07L24.82 42H9.18l-4.96 1.86a1.981 1.981 0 00-1.13 1.07 2.03 2.03 0 00-.02 1.55L3.68 48h26.64l.61-1.52a2.03 2.03 0 00-.02-1.55zM33 50H1a1.003 1.003 0 00-1 1v4c.002.552.448.998 1 1h1v-2a1 1 0 012 0v2h2v-2a1 1 0 012 0v2h2v-2a1 1 0 012 0v2h2v-2a1 1 0 012 0v2h2v-2a1 1 0 012 0v2h2v-2a1 1 0 012 0v2h2v-2a1 1 0 012 0v2h2v-2a1 1 0 012 0v2h1a1.003 1.003 0 001-1v-4a1.003 1.003 0 00-1-1z\" />\n      <path d=\"M24.85 5.32L23.62 9h-.01l-1.33 4H11.71L9.15 5.32a1.002 1.002 0 111.9-.64l.75 2.26c-.02.02-.05.04-.07.06h.09l-.02-.06a7.94 7.94 0 0110.4 0l-.02.06h.09c-.02-.02-.05-.04-.07-.06l.75-2.26a1.002 1.002 0 111.9.64z\" />\n      <path d=\"M11.82 7h-.09c.02-.02.05-.04.07-.06l.02.06zM22.27 7h-.09l.02-.06c.02.02.05.04.07.06z\" />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const PawnIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M13.05 2.05a7 7 0 119.901 9.898 7 7 0 01-9.9-9.898zm1.498 15.797a33.035 33.035 0 00-.561-2.796 8.96 8.96 0 008.027 0c-.226.92-.417 1.86-.562 2.795L21.43 18h-6.86l-.022-.153zM9 23v-2c0-.552.448-1 1-1h16c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H10c-.552 0-1-.448-1-1zm5.76 3h6.482a25.675 25.675 0 002.154 8H12.605a25.454 25.454 0 002.155-8zM7 37c0-.552.448-1 1-1h20c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H8c-.552 0-1-.448-1-1v-2zm-5.906 7.925a1.985 1.985 0 011.128-1.065l5.13-1.923.011-.008c.21.046.423.07.637.071h20c.214 0 .428-.025.637-.071l.012.008 5.13 1.923a2 2 0 011.154 2.615L34.323 48H1.677l-.61-1.525a1.987 1.987 0 01.027-1.55zM36 55c0 .552-.448 1-1 1h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H9v-2a1 1 0 00-2 0v2H5v-2a1 1 0 00-2 0v2H1c-.552 0-1-.448-1-1v-4c0-.551.447-.998.999-1H35c.552.002.998.449.999 1v4z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const RookIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M5 0h2v2a2.002 2.002 0 002 2h2a2.002 2.002 0 002-2V0h2v2a2.003 2.003 0 001.999 2H19A2.003 2.003 0 0021 2V0h2v2a2.002 2.002 0 002 2h2a2.002 2.002 0 002-2V0h2v5.871a4.023 4.023 0 01-1.228 2.884L28.477 10H7.523L6.228 8.755A4.022 4.022 0 015 5.87V0zm2 15v-2c0-.552.448-1 1-1h20c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H8c-.552 0-1-.448-1-1zm3 3h16v16H10V18zM7 37c0-.552.448-1 1-1h20c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H8c-.552 0-1-.448-1-1v-2zm-5.906 7.925a1.985 1.985 0 011.128-1.065l5.13-1.923.011-.008c.21.046.423.07.637.071h20c.214 0 .428-.025.637-.071l.012.008 5.13 1.922a2 2 0 011.154 2.616L34.323 48H1.677l-.61-1.525a1.987 1.987 0 01.027-1.55zM36 55c0 .552-.448 1-1 1h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H9v-2a1 1 0 00-2 0v2H5v-2a1 1 0 00-2 0v2H1c-.552 0-1-.448-1-1v-4c0-.551.447-.998.999-1H35A1 1 0 0136 51v4z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import { BishopIcon } from \"./icons/bishop\";\nimport { KingIcon } from \"./icons/king\";\nimport { KnightIcon } from \"./icons/knight\";\nimport { QueenIcon } from \"./icons/queen\";\nimport { PawnIcon } from \"./icons/pawn\";\nimport { RookIcon } from \"./icons/rook\";\n\nimport { IDesignPieces } from \"types/Design\";\n\nexport const classic: IDesignPieces = {\n  [\"black\"]: {\n    bishop: <BishopIcon className=\"pieces black_pieces\" height={70}/>,\n    king: <KingIcon className=\"pieces black_pieces\"  height={70} />,\n    queen: <QueenIcon className=\"pieces black_pieces\" height={70} />,\n    knight: <KnightIcon className=\"pieces black_pieces\" height={70} />,\n    pawn: <PawnIcon className=\"pieces black_pieces\" height={70} />,\n    rook: <RookIcon className=\"pieces black_pieces\" height={70} />,\n  },\n  [\"white\"]: {\n    bishop: <BishopIcon className=\"pieces white_pieces\" height={70} />,\n    king: <KingIcon className=\"pieces white_pieces\" height={70} />,\n    queen: <QueenIcon className=\"pieces white_pieces\" height={70} />,\n    knight: <KnightIcon className=\"pieces white_pieces\" height={70} />,\n    pawn: <PawnIcon className=\"pieces white_pieces\" height={70} />,\n    rook: <RookIcon className=\"pieces white_pieces\" height={70} />,\n  },\n};\n","import * as React from \"react\";\n\nexport const BishopIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M3 60h32a3.003 3.003 0 003-3v-4a3.003 3.003 0 00-3-3h-.523l.313-.782a4.001 4.001 0 00-2.31-5.231l-3.112-1.167A2.97 2.97 0 0030 41v-2a3.003 3.003 0 00-3-3h-1V25h1a3.003 3.003 0 003-3v-1a3.003 3.003 0 00-3-3h-1.176A8.258 8.258 0 0028 12.47c0-2.847-3.652-7.774-6.716-11.404a2.976 2.976 0 00-4.568-.001C13.652 4.696 10 9.623 10 12.47c.014 2.05.79 4.02 2.176 5.53H11a3.003 3.003 0 00-3 3v1a3.003 3.003 0 003 3h1v11h-1a3.003 3.003 0 00-3 3v2c.003.66.225 1.3.632 1.82L5.52 43.987a4.001 4.001 0 00-2.31 5.231l.313.782H3a3.003 3.003 0 00-3 3v4a3.003 3.003 0 003 3zm9-47.53a8.675 8.675 0 011.498-3.683 7.575 7.575 0 002.948 4.046 1 1 0 101.108-1.665 6.506 6.506 0 01-2.517-4.704 64.574 64.574 0 013.208-4.11.997.997 0 011.51.001C23.665 6.989 26 10.771 26 12.47A6.436 6.436 0 0122.688 18h-7.376A6.436 6.436 0 0112 12.47zM10 22v-1c0-.552.448-1 1-1h16c.552 0 1 .448 1 1v1c0 .552-.448 1-1 1H11c-.552 0-1-.448-1-1zm4 3h10v11H14V25zm-4 14c0-.552.448-1 1-1h16c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H11c-.552 0-1-.448-1-1v-2zm-4.933 9.475a2 2 0 011.156-2.615l4.96-1.86h15.635l4.96 1.86a2 2 0 011.155 2.615L32.323 50H5.677l-.61-1.525zM2 53c0-.552.448-1 1-1h32c.552 0 1 .448 1 1v4c0 .552-.448 1-1 1h-1v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H6v-2a1 1 0 00-2 0v2H3c-.552 0-1-.448-1-1v-4z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const KingIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M3 60h32a3.003 3.003 0 003-3v-4a3.003 3.003 0 00-3-3h-.523l.313-.782a4.001 4.001 0 00-2.31-5.231l-3.112-1.167A2.97 2.97 0 0030 41a3.003 3.003 0 00-3-3h-1V21h1a3 3 0 000-6h-.659l1.423-3.292c.331-.767.31-1.64-.058-2.39a3.13 3.13 0 00-2.05-1.636L20 6.225V4h1a1 1 0 000-2h-1V1a1 1 0 00-2 0v1h-1a1 1 0 000 2h1v2.225l-5.655 1.457a3.13 3.13 0 00-2.051 1.635 2.852 2.852 0 00-.058 2.39L11.66 15H11a3 3 0 000 6h1v17h-1a3.003 3.003 0 00-3 3c.003.66.225 1.3.632 1.82L5.52 43.987a4.001 4.001 0 00-2.31 5.231l.313.782H3a3.003 3.003 0 00-3 3v4a3.003 3.003 0 003 3zm9.072-49.086a.837.837 0 01.018-.717c.155-.293.43-.505.753-.579L19 8.033l6.157 1.585c.324.074.598.286.753.58.113.223.12.487.018.716L24.163 15H13.837l-1.765-4.086zM10 18c0-.552.448-1 1-1h16a1 1 0 010 2H11c-.552 0-1-.448-1-1zm4 3h10v17H14V21zm-3 19h16a1 1 0 010 2H11a1 1 0 010-2zm-5.933 8.475a2 2 0 011.156-2.615l4.96-1.86h15.635l4.96 1.86a2 2 0 011.155 2.615L32.323 50H5.677l-.61-1.525zM2 53c0-.552.448-1 1-1h32c.552 0 1 .448 1 1v4c0 .552-.448 1-1 1h-1v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H6v-2a1 1 0 00-2 0v2H3c-.552 0-1-.448-1-1v-4z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const KnightIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M35 50.001h-.523l.313-.782a4.001 4.001 0 00-2.31-5.23l-3.112-1.168a2.97 2.97 0 00.632-1.82v-2a2.969 2.969 0 00-.197-1.041 3.957 3.957 0 003.05-2.18 3.653 3.653 0 00-.428-3.928L21.45 17.84a.795.795 0 01-.079-.904 1.004 1.004 0 011.001-.497c2.987.294 5.152.817 6.26 1.514l2.334 1.469a2.033 2.033 0 002.477-.243l1.449-1.366a3.765 3.765 0 00.176-5.282l-3.091-3.335a16.896 16.896 0 00-5.211-3.8l-2.625-1.19V1.946A1.979 1.979 0 0022.137 0H19.17a3.031 3.031 0 00-2.635 1.493 9.92 9.92 0 00-.95 2.34c-1.689.186-7.389 1.142-10.163 5.688-2.17 3.557-1.967 8.353.587 14.253 0 .078-.009.148-.009.226 0 .133.027.265.078.387v9.77A3.828 3.828 0 008.36 37.61 2.961 2.961 0 008 39v2c.003.66.225 1.3.632 1.82L5.52 43.988a4 4 0 00-2.31 5.23l.313.783H3a3.003 3.003 0 00-3 3v4a3.004 3.004 0 003 3.001h32a3.004 3.004 0 003-3v-4a3.003 3.003 0 00-3-3zm-24-8c-.552 0-1-.447-1-1v-2c0-.552.448-.999 1-1h16c.552.001 1 .448 1 1v2c0 .553-.448 1-1 1H11zm20.055-7.097A2.004 2.004 0 0129.215 36h-6.654c.038-.042.08-.08.116-.123a5.987 5.987 0 001.339-4.863l-1.41-8.455 8.245 10.526c.423.512.503 1.226.204 1.82zM7.123 10.573a9.9 9.9 0 015.305-3.959 22.518 22.518 0 00-6 12.228c-.822-3.35-.607-6.128.695-8.27zm.897 12.894c.17-9.708 4.758-14.706 7.114-16.629-.012.257-.02.52-.02.793a1 1 0 002 0 10.22 10.22 0 011.155-5.142c.192-.312.535-.498.9-.489l2.972-.053v2.257a1.954 1.954 0 001.128 1.752l2.643 1.247a14.917 14.917 0 014.598 3.351l3.092 3.336a1.758 1.758 0 01-.083 2.467l-1.49 1.37-2.333-1.468c-1.388-.873-3.787-1.482-7.129-1.81a3.025 3.025 0 00-2.949 1.523 2.785 2.785 0 00.258 3.1l.155.199 2.012 12.072a3.991 3.991 0 01-.893 3.242A4.047 4.047 0 0118 36h-7.91a1.935 1.935 0 01-2.012-1.842V23.737a.99.99 0 00-.057-.27zm-2.953 25.01a2 2 0 011.156-2.616l4.96-1.86h15.635l4.96 1.86a2 2 0 011.155 2.616L32.323 50H5.677l-.61-1.525zM36 57c0 .553-.448 1-1 1h-1v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H6v-2a1 1 0 00-2 0v2H3c-.552 0-1-.447-1-1v-4c0-.552.448-.999 1-1h1.997l.003.001h30c.552 0 1 .447 1 1v4z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const QueenIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M3 60h32a3.003 3.003 0 003-3v-4a3.003 3.003 0 00-3-3h-.523l.313-.782a4.001 4.001 0 00-2.31-5.231l-3.112-1.167A2.97 2.97 0 0030 41a3.003 3.003 0 00-3-3h-1V21h1a3 3 0 000-6h-.613l1.389-4.166.01-.028 1.162-3.49a1 1 0 10-1.896-.632l-.571 1.713a9.984 9.984 0 00-3.86-2.703 4 4 0 10-7.241 0 9.984 9.984 0 00-3.86 2.703l-.572-1.713a1 1 0 10-1.896.632l1.163 3.49.01.028L11.612 15H11a3 3 0 000 6h1v17h-1a3.003 3.003 0 00-3 3c.003.66.225 1.3.632 1.82L5.52 43.987a4.001 4.001 0 00-2.31 5.231l.313.782H3a3.003 3.003 0 00-3 3v4a3.003 3.003 0 003 3zM19 7a7.993 7.993 0 015.266 2H13.734A7.993 7.993 0 0119 7zm-2-3a2 2 0 113.635 1.15c-1.08-.2-2.19-.2-3.27 0A1.977 1.977 0 0117 4zm-4.613 7h13.226l-1.333 4H13.72l-1.333-4zM10 18c0-.552.448-1 1-1h16a1 1 0 010 2H11c-.552 0-1-.448-1-1zm4 3h10v17H14V21zm-3 19h16a1 1 0 010 2H11a1 1 0 010-2zm-5.933 8.475a2 2 0 011.156-2.615l4.96-1.86h15.635l4.96 1.86a2 2 0 011.155 2.615L32.323 50H5.677l-.61-1.525zM2 53c0-.552.448-1 1-1h32c.552 0 1 .448 1 1v4c0 .552-.448 1-1 1h-1v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H6v-2a1 1 0 00-2 0v2H3c-.552 0-1-.448-1-1v-4z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const PawnIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M3 60h34a3.003 3.003 0 003-3v-4a2.993 2.993 0 00-1.656-2.667l.446-1.115a4 4 0 00-2.31-5.231l-3.909-1.466c.278-.459.426-.985.429-1.521v-2a3.003 3.003 0 00-3-3h-2.528a.98.98 0 00-.091-.434A23.55 23.55 0 0125.254 28H28a3.003 3.003 0 003-3v-2a3.003 3.003 0 00-3-3h-2.544a30.257 30.257 0 011.246-5.009 9 9 0 10-13.404 0A30.244 30.244 0 0114.544 20H12a3.003 3.003 0 00-3 3v2a3.003 3.003 0 003 3h2.749a23.384 23.384 0 01-2.13 7.566.98.98 0 00-.09.434H10a3.003 3.003 0 00-3 3v2c.003.536.15 1.062.429 1.521l-3.91 1.466a4 4 0 00-2.309 5.231l.446 1.115A2.993 2.993 0 000 53v4a3.003 3.003 0 003 3zm35-3c0 .552-.448 1-1 1h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H7v-2a1 1 0 00-2 0v2H3c-.552 0-1-.448-1-1v-4c0-.551.447-.998.999-1H37c.552.002.998.449.999 1v4zM15.05 4.05a7 7 0 119.901 9.898 7 7 0 01-9.9-9.898zm1.498 15.797a33.035 33.035 0 00-.561-2.796 8.96 8.96 0 008.027 0c-.226.92-.417 1.86-.562 2.795L23.43 20h-6.86l-.022-.153zM11 25v-2c0-.552.448-1 1-1h16c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H12c-.552 0-1-.448-1-1zm5.76 3h6.482a25.675 25.675 0 002.154 8H14.605a25.454 25.454 0 002.155-8zM9 39c0-.552.448-1 1-1h20c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H10c-.552 0-1-.448-1-1v-2zm-5.906 7.925a1.985 1.985 0 011.128-1.065l5.13-1.923.011-.008c.21.046.423.07.637.071h20c.214 0 .428-.025.637-.071l.012.008 5.13 1.923a2 2 0 011.154 2.615L36.323 50H3.677l-.61-1.525a1.987 1.987 0 01.027-1.55z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from \"react\";\n\nexport const RookIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 40 75\"\n    height={70}\n    width={70}\n    {...props}\n  >\n    <path\n      d=\"M3 60h34a3.003 3.003 0 003-3v-4a2.993 2.993 0 00-1.656-2.667l.446-1.115a4.001 4.001 0 00-2.31-5.231l-3.909-1.466c.278-.459.426-.985.429-1.521v-2a3.003 3.003 0 00-3-3V20a3.003 3.003 0 003-3v-2a2.973 2.973 0 00-.735-1.945l.894-.859A6.031 6.031 0 0035 7.871V2a2.002 2.002 0 00-2-2h-2a2.002 2.002 0 00-2 2v2h-2V2a2.002 2.002 0 00-2-2h-2a2.002 2.002 0 00-2 2v2h-2V2a2.002 2.002 0 00-2-2h-2a2.002 2.002 0 00-2 2v2h-2V2a2.002 2.002 0 00-2-2H7a2.002 2.002 0 00-2 2v5.871a6.03 6.03 0 001.842 4.325l.893.859A2.973 2.973 0 007 15v2a3.003 3.003 0 003 3v16a3.003 3.003 0 00-3 3v2c.003.536.15 1.062.429 1.521l-3.91 1.466a4 4 0 00-2.309 5.231l.446 1.115A2.993 2.993 0 000 53v4a3.003 3.003 0 003 3zm35-3c0 .552-.448 1-1 1h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2h-2v-2a1 1 0 00-2 0v2H7v-2a1 1 0 00-2 0v2H3c-.552 0-1-.448-1-1v-4c0-.551.447-.998.999-1H37A1 1 0 0138 53v4zM7 2h2v2a2.002 2.002 0 002 2h2a2.002 2.002 0 002-2V2h2v2a2.003 2.003 0 001.999 2H21A2.003 2.003 0 0023 4V2h2v2a2.002 2.002 0 002 2h2a2.002 2.002 0 002-2V2h2v5.871a4.023 4.023 0 01-1.228 2.884L30.477 12H9.523l-1.295-1.245A4.022 4.022 0 017 7.87V2zm2 15v-2c0-.552.448-1 1-1h20c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H10c-.552 0-1-.448-1-1zm3 3h16v16H12V20zM9 39c0-.552.448-1 1-1h20c.552 0 1 .448 1 1v2c0 .552-.448 1-1 1H10c-.552 0-1-.448-1-1v-2zm-5.906 7.925a1.985 1.985 0 011.128-1.065l5.13-1.923.011-.008c.21.046.423.07.637.071h20c.214 0 .428-.025.637-.071l.012.008 5.13 1.922a2 2 0 011.154 2.616L36.323 50H3.677l-.61-1.525a1.987 1.987 0 01.027-1.55z\"\n      fillRule=\"nonzero\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import { Square } from \"chess\";\n\nexport const possibleEnPassant = (from: Square, to: Square): boolean => {\n  return from.piece.type === \"pawn\"\n    ? from.rank + 1 === to.rank && from.file !== to.file\n    : false;\n};\n\nexport const possiblePromotion = (from: Square, to: Square): boolean => {\n  return from.piece.type === \"pawn\" && (to.rank === 8 || to.rank === 1);\n};\n\nexport const calculatePGN = (\n  from: Square,\n  to: Square,\n  promotionTo?: string\n) => {\n  const castling =\n    from.piece.type === \"king\" &&\n    from.file === \"e\" &&\n    (to.file === \"g\" || to.file === \"c\");\n\n  if (castling) {\n    return to.file === \"g\" ? \"O-O\" : \"O-O-O\";\n  }\n\n  const attackingPiece = possibleEnPassant(from, to) || to.piece !== null;\n  return (\n    from.piece.notation +\n    (from.piece.type === \"pawn\" && attackingPiece ? from.file : \"\") +\n    (attackingPiece ? \"x\" : \"\") +\n    to.file +\n    to.rank +\n    (possiblePromotion(from, to) ? (promotionTo ? promotionTo : \"\") : \"\")\n  );\n};\n","import { BishopIcon } from \"./icons/bishop\";\nimport { KingIcon } from \"./icons/king\";\nimport { KnightIcon } from \"./icons/knight\";\nimport { QueenIcon } from \"./icons/queen\";\nimport { PawnIcon } from \"./icons/pawn\";\nimport { RookIcon } from \"./icons/rook\";\n\nimport { IDesignPieces } from \"types/Design\";\n\nexport const classic_outlined: IDesignPieces = {\n  [\"black\"]: {\n    bishop: <BishopIcon className=\"pieces black_pieces\" height={70}/>,\n    king: <KingIcon className=\"pieces black_pieces\"  height={70} />,\n    queen: <QueenIcon className=\"pieces black_pieces\" height={70} />,\n    knight: <KnightIcon className=\"pieces black_pieces\" height={70} />,\n    pawn: <PawnIcon className=\"pieces black_pieces\" height={70} />,\n    rook: <RookIcon className=\"pieces black_pieces\" height={70} />,\n  },\n  [\"white\"]: {\n    bishop: <BishopIcon className=\"pieces white_pieces\" height={70} />,\n    king: <KingIcon className=\"pieces white_pieces\" height={70} />,\n    queen: <QueenIcon className=\"pieces white_pieces\" height={70} />,\n    knight: <KnightIcon className=\"pieces white_pieces\" height={70} />,\n    pawn: <PawnIcon className=\"pieces white_pieces\" height={70} />,\n    rook: <RookIcon className=\"pieces white_pieces\" height={70} />,\n  },\n};\n","import React, { CSSProperties, FC, MouseEvent, useContext } from \"react\";\nimport CSS from \"csstype\";\nimport clsx from \"clsx\";\nimport { Square } from \"chess\";\n\nimport \"./Tile.css\";\nimport { ITilePosition, TileClass } from \"../types/Board\";\nimport { TileDataContext } from \"context/Board\";\n\nimport { classic } from \"designs/pieces\";\nimport { possibleEnPassant } from \"utils/Chess\";\n\nconst PossibleMove: FC<{ capture?: boolean }> = ({ capture }) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n      }}\n    >\n      <div\n        style={{\n          width: \"30px\",\n          height: \"30px\",\n          background: capture ? \"rgba(200, 0, 0, 0.5)\" : \"rgba(0, 0, 0, 0.2)\",\n          borderRadius: \"50%\",\n          position: \"relative\",\n          left: \"-50%\",\n        }}\n      />\n    </div>\n  );\n};\n\nconst Tile: FC<{\n  tile: Square;\n  onClick?: (event: MouseEvent) => void;\n  on_check: boolean;\n  moved_last: boolean;\n  show_move: boolean;\n  style: CSSProperties;\n}> = ({ show_move, tile, onClick, on_check, moved_last, style, children }) => {\n  const { lastMove, kingOnCheck, selectedTile, playerSide } = useContext(\n    TileDataContext\n  );\n\n  const determineVariant = () => {\n    const oddAlphabets = [\"a\", \"c\", \"e\", \"g\"];\n\n    if (tile.rank % 2 == 1) {\n      if (oddAlphabets.includes(tile.file)) {\n        return \"--variant1\";\n      } else {\n        return \"--variant2\";\n      }\n    } else {\n      if (oddAlphabets.includes(tile.file)) {\n        return \"--variant2\";\n      } else {\n        return \"--variant1\";\n      }\n    }\n  };\n\n  const tilePiece = () => {\n    if (tile.piece?.side.name === \"white\") {\n      switch (tile.piece.type) {\n        case \"pawn\":\n          return classic.white.pawn;\n        case \"bishop\":\n          return classic.white.bishop;\n        case \"king\":\n          return classic.white.king;\n        case \"queen\":\n          return classic.white.queen;\n        case \"rook\":\n          return classic.white.rook;\n        case \"knight\":\n          return classic.white.knight;\n      }\n    } else if (tile.piece?.side.name === \"black\") {\n      switch (tile.piece.type) {\n        case \"pawn\":\n          return classic.black.pawn;\n        case \"bishop\":\n          return classic.black.bishop;\n        case \"king\":\n          return classic.black.king;\n        case \"queen\":\n          return classic.black.queen;\n        case \"rook\":\n          return classic.black.rook;\n        case \"knight\":\n          return classic.black.knight;\n      }\n    }\n  };\n\n  if (lastMove !== undefined) {\n    moved_last =\n      (lastMove.prevSquare.file === tile.file &&\n        lastMove.prevSquare.rank === tile.rank) ||\n      (lastMove.postSquare.file === tile.file &&\n        lastMove.postSquare.rank === tile.rank);\n  }\n\n  if (kingOnCheck !== undefined) {\n    on_check = kingOnCheck.file === tile.file && kingOnCheck.rank === tile.rank;\n  }\n\n  const showEnPassant =\n    selectedTile !== undefined && selectedTile.piece\n      ? possibleEnPassant(selectedTile, tile)\n      : false;\n\n  return (\n    <>\n      <div\n        onClick={onClick}\n        className={clsx(\n          \"tile\",\n          on_check && \"--on-check\",\n          moved_last && \"--moved-last\",\n          !on_check && !moved_last && determineVariant()\n        )}\n        style={{\n          fontSize: \"small\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          ...style,\n        }}\n      >\n        {tilePiece()}\n\n        {show_move === true ? (\n          <PossibleMove capture={tile.piece !== null || showEnPassant} />\n        ) : (\n          <></>\n        )}\n\n        {tile.file === \"a\" ? (\n          <div style={{ position: \"absolute\", top: \"5px\", left: \"5px\" }}>\n            {tile.rank}\n          </div>\n        ) : (\n          <></>\n        )}\n\n        {playerSide === \"white\" ? (\n          tile.rank === 1 ? (\n            <div style={{ position: \"absolute\", bottom: \"5px\", right: \"5px\" }}>\n              {tile.file}\n            </div>\n          ) : (\n            <></>\n          )\n        ) : tile.rank === 8 ? (\n          <div style={{ position: \"absolute\", bottom: \"5px\", right: \"5px\" }}>\n            {tile.file}\n          </div>\n        ) : (\n          <></>\n        )}\n\n        {/* <div style={{ position: \"absolute\", bottom: \"0%\", display: \"flex\" }}>\n          {\" \"}\n          <div>[{row}]</div>\n          <div>[{column}]</div>\n        </div> */}\n      </div>\n    </>\n  );\n};\n\nexport default Tile;\n","import React, {\n  FC,\n  MouseEvent,\n  MouseEventHandler,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport CSS from \"csstype\";\n\nimport ClockTimer from \"components/ClockTimer\";\nimport Tile from \"components/Tile\";\n\nimport {\n  BoardClass,\n  IMovePiece,\n  ITilePosition,\n  SelectedTile,\n  TileClass,\n  TileData,\n} from \"types/Board\";\n\nimport {\n  GameClientContext,\n  SocketIOContext,\n  TileDataContext,\n} from \"context/Board\";\nimport chess, { Move, Square, GameStatus, PlayedMove, Piece } from \"chess\";\n\nimport { GameResults, PlayedMoveMove, PlayerSides, Side } from \"types/Board\";\nimport { maskSideInEnum, SideEnum } from \"types/Side\";\nimport { classic, classic_outlined } from \"designs/pieces\";\n\nimport { calculatePGN, possiblePromotion } from \"utils/Chess\";\nimport { BoardContext } from \"context/Board\";\n\nconst nodeEnvState = (dev: any, prod: any) => {\n  if (process.env.NODE_ENV === \"development\") {\n    return dev;\n  } else {\n    return prod;\n  }\n};\n\nconst Board: FC<{\n  gameId: string;\n  playerSide: string;\n  type?: string;\n  undo?(): void;\n  onGameEnd?(results: GameResults): void;\n  clockTimer?: number;\n  disableBoard?: boolean;\n}> = ({ gameId, playerSide, onGameEnd, clockTimer, disableBoard = false }) => {\n  const [game_id, set_game_id] = useState(gameId);\n  const [disable_pieces, set_disable_pieces] = useState(disableBoard);\n  const [player_side, set_player_side] = useState(nodeEnvState(\"\", playerSide));\n  const [tiles_as_jsx, set_tiles_as_jsx] = useState<JSX.Element[]>();\n  const [selected_tile, set_selected_tile] = useState<Square>();\n  const [turn_to_play, set_turn_to_play] = useState(\"white\");\n  const [last_move, set_last_move] = useState<PlayedMoveMove>();\n  const [movesToDisplay, setMovesToDisplay] = useState<Square[]>();\n  const [history, setHistory] = useState<PlayedMove[]>([]);\n  const [kingOnCheck, setKingOnCheck] = useState<Square>();\n  const [promotion, setPromotion] = useState(\"Q\");\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [gameResults, setGameResults] = useState<{\n    winingSide: string;\n    endedBy: string;\n  }>();\n\n  const gameClient = useContext(GameClientContext);\n  const socket = useContext(SocketIOContext);\n\n  const gameOver = (endedBy: string, winingSide: Side) => {\n    set_disable_pieces(() => true);\n    setIsGameOver(() => true);\n    const results: GameResults = { endedBy, winingSide };\n    setGameResults(results);\n    console.log(results);\n    if (onGameEnd) {\n      onGameEnd(results);\n    }\n  };\n\n  const undo = () => {\n    console.log(gameClient.game.moveHistory);\n\n    if (history.length > 0) {\n      const tempMoves = history;\n      console.log(tempMoves);\n\n      const lastMove = tempMoves[tempMoves.length - 1];\n\n      lastMove.undo();\n      tempMoves.pop();\n      setHistory(tempMoves);\n\n      console.log({ history: gameClient.game.moveHistory });\n      console.log({ notatedMoves: gameClient.getStatus().notatedMoves });\n    }\n  };\n\n  useEffect(() => {\n    map_tile_data_to_jsx();\n  }, [\n    selected_tile,\n    player_side,\n    turn_to_play,\n    last_move,\n    movesToDisplay,\n    kingOnCheck,\n    history,\n    disable_pieces,\n  ]);\n\n  useEffect(() => {\n    if (gameClient) {\n      gameClient.on(\"check\", ({ attackingSquare, kingSquare }) => {\n        console.log(\"The King is under attack!\");\n        setKingOnCheck(kingSquare);\n        console.log(attackingSquare, kingSquare);\n      });\n\n      gameClient.on(\"castle\", (move) => {\n        console.log(\"A castle has occured!\");\n        console.log(move);\n      });\n\n      gameClient.on(\"enPassant\", (move) => {\n        console.log(\"An en Passant has occured!\");\n        console.log(move);\n      });\n\n      gameClient.on(\"promote\", (square) => {\n        console.log(\"A Pawn has been promoted!\");\n        console.log(square);\n      });\n\n      gameClient.on(\"capture\", (move) => {\n        console.log(\"A piece has been captured!\");\n        console.log(move);\n      });\n\n      gameClient.on(\"move\", () => {\n        map_tile_data_to_jsx();\n      });\n\n      gameClient.on(\"checkmate\", ({ attackingSquare, kingSquare }) => {\n        console.log(\"The game has ended due to checkmate!\");\n        setKingOnCheck(() => kingSquare);\n        gameOver(\"Check Mate\", turn_to_play);\n        console.log(kingSquare);\n      });\n    }\n  }, []);\n\n  function map_tile_data_to_jsx(): void {\n    const tilesDiv = gameClient.game.board.squares.map(\n      (tile: Square, i): JSX.Element => {\n        let possibleMoves: Square[] = [];\n        gameClient.validMoves.map((move) => {\n          if (tile.file === move.src.file && tile.rank === move.src.rank)\n            if (possibleMoves !== undefined) {\n              possibleMoves = [...move.squares, ...possibleMoves];\n            } else {\n              possibleMoves = move.squares;\n            }\n        });\n\n        let showPossibleMoveOnThisTile: boolean = false;\n        movesToDisplay?.map((move) => {\n          if (move.file === tile.file && move.rank === tile.rank) {\n            showPossibleMoveOnThisTile = true;\n          }\n        });\n\n        return (\n          <Tile\n            key={i}\n            style={{\n              transform:\n                player_side === \"white\"\n                  ? \"rotate(180deg) rotateY(180deg)\"\n                  : \"rotate(0deg)\",\n            }}\n            tile={tile}\n            moved_last={false}\n            on_check={false}\n            show_move={showPossibleMoveOnThisTile}\n            onClick={(event: MouseEvent) => {\n              if (disable_pieces) return;\n\n              if (showPossibleMoveOnThisTile) {\n                // const pgn = calculatePGN(selected_tile, tile, promotion);\n                const moves = gameClient.getStatus().notatedMoves;\n                const pgn = Object.keys(moves).find((key) => {\n                  const { dest, src } = moves[key];\n                  return (\n                    dest.file === tile.file &&\n                    dest.rank === tile.rank &&\n                    src.file === selected_tile.file &&\n                    src.rank === selected_tile.rank\n                  );\n                });\n\n                const move = gameClient.move(pgn);\n                setHistory((prev) => [...prev, move]);\n                console.log(move);\n\n                if (socket) {\n                  socket.emit(\"send-move\", game_id, move.move, next_turn());\n                }\n\n                setMovesToDisplay([]);\n                set_turn_to_play(next_turn());\n                set_selected_tile(undefined);\n                updateView();\n                // console.log(gameClient.getStatus().notatedMoves);\n              } else if (possibleMoves.length > 0) {\n                if (\n                  tile.piece !== undefined &&\n                  nodeEnvState(\"\", tile.piece.side.name) ===\n                    nodeEnvState(\"\", player_side)\n                ) {\n                  set_selected_tile(tile);\n                  setMovesToDisplay(possibleMoves);\n                }\n              }\n            }}\n          />\n        );\n      }\n    );\n\n    set_tiles_as_jsx(tilesDiv);\n  }\n\n  const next_turn = () => {\n    return player_side === \"white\" ? \"black\" : \"white\";\n  };\n\n  const updateView = () => {\n    if (history.length > 0) {\n      const lastMove = history[history.length - 1].move;\n\n      set_last_move(lastMove);\n    }\n  };\n\n  const boardStyle: CSS.Properties = {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(8, 1fr)\",\n    gridTemplateRows: \"repeat(8, 1fr)\",\n    transform: player_side === \"white\" ? \"rotate(180deg) rotateY(180deg)\" : \"\",\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          margin: \"10px 50px\",\n          width: \"100%\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        <h6>game_id: {game_id}</h6>\n        <h6>My side:{player_side}</h6>\n        <h6>turn:{turn_to_play}</h6>\n        <button onClick={() => undo()}>Undo</button>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"right\",\n        }}\n      >\n        <TileDataContext.Provider\n          value={{\n            lastMove: last_move,\n            kingOnCheck: gameClient.isCheck ? kingOnCheck : undefined,\n            selectedTile: selected_tile,\n            playerSide: player_side,\n          }}\n        >\n          <ClockTimer\n            onTimeUp={(winingSide: Side) => {\n              gameOver(\"Time Up\", winingSide);\n            }}\n            player_side={player_side}\n            turn_to_play={turn_to_play}\n          >\n            <div style={boardStyle}>{tiles_as_jsx}</div>\n          </ClockTimer>\n        </TileDataContext.Provider>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport chess from \"chess\";\n\nimport Board from \"components/Board\";\nimport { GameClientContext } from \"context/Board\";\n\nconst DisabledBoard = () => {\n  return (\n    <GameClientContext.Provider value={chess.createSimple()}>\n      <Board gameId=\"\" playerSide=\"\" disableBoard={true} />\n    </GameClientContext.Provider>\n  );\n};\n\nexport default DisabledBoard;\n","import React, { FC, useContext, useEffect, useState } from \"react\";\nimport chess, { Move, Square, GameStatus, PlayedMove, Piece } from \"chess\";\n\nimport Board from \"components/Board\";\nimport { GameClientContext, SocketIOContext } from \"context/Board\";\nimport { PlayerSides } from \"types/Board\";\n\nconst gameClient = chess.create({ PGN: true });\n\nconst SocketIOBoard: FC<{\n  gameId: string;\n  playerSide: string;\n  opponent: string;\n  username: string;\n}> = (props) => {\n  useEffect(() => {\n    console.log(\"initialising Game...\");\n    startGame();\n\n    console.log(props);\n  }, []);\n\n  const socket = useContext(SocketIOContext);\n\n  const startGame = () => {\n    socket.on(\"move\", (move: Move, turn: string) => {\n      console.log(\"socketIOSentMove\", move);\n      console.log(\"algebraic\", move.algebraic);\n      gameClient.move(move.algebraic);\n    });\n  };\n\n  return (\n    <GameClientContext.Provider value={gameClient}>\n      <Board {...props} />\n    </GameClientContext.Provider>\n  );\n};\n\nexport default SocketIOBoard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Form,\n  Input,\n  Radio,\n  Select,\n  Spin,\n  Statistic,\n} from \"antd\";\nimport io from \"socket.io-client\";\n\nimport { SocketIOContext } from \"context/Board\";\n\nimport DisabledBoard from \"./DisabledBoard\";\nimport SocketIOBoard from \"./SocketIOBoard\";\nimport { PlayerSides } from \"types/Board\";\n\nconst socket = io();\n\nconst TwoPlayerBoard = () => {\n  const [activity, setActivity] = useState(\"createGame\");\n  const [isFormFilled, setIsFormFilled] = useState(false);\n  const [hasStaked, setHasStaked] = useState(false);\n\n  const [gameId, setGameId] = useState(\"\");\n  const [playerSide, setPlayerSide] = useState(\"\");\n  const [opponent, setOpponent] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const [startGame, setStartGame] = useState(false);\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 12 },\n  };\n  const [form] = Form.useForm();\n\n  const onActivityChange = ({ activity: choice }: { activity: string }) => {\n    console.log({ activity, choice });\n    if (choice && choice !== activity) {\n      setActivity(choice);\n    }\n  };\n\n  const onFinish = (values: any) => {\n    const gameSettings = values;\n    setUsername(() => values.username);\n    console.log({ finishValues: values });\n\n    socket.on(\"start-game\", (sides: PlayerSides) => {\n      if (sides.white === values.username) {\n        setPlayerSide(() => \"white\");\n        setOpponent(() => sides.black);\n      } else {\n        setPlayerSide(() => \"black\");\n        setOpponent(() => sides.white);\n      }\n      setStartGame(true);\n    });\n\n    if (values.activity === \"createGame\") {\n      //stake coin\n\n      //call on success\n      socket.on(\"game-id\", (gameId: string) => {\n        setGameId(() => gameId);\n        setIsFormFilled(true);\n      });\n\n      //call server to create game\n      socket.emit(\"create-game\", values.username, gameSettings);\n    } else if (values.activity === \"joinGame\") {\n      socket.emit(\"join-game\", values.gameId, values.username);\n      setGameId(values.gameId);\n    } else {\n      socket.disconnect();\n      throw new Error(\"Error Filling Form\");\n    }\n  };\n\n  return (\n    <>\n      {startGame ? (\n        <SocketIOContext.Provider value={socket}>\n          <SocketIOBoard\n            gameId={gameId}\n            playerSide={playerSide}\n            opponent={opponent}\n            username={username}\n          />\n        </SocketIOContext.Provider>\n      ) : (\n        <>\n          <DisabledBoard />\n          {isFormFilled ? (\n            activity === \"createGame\" ? (\n              <Card\n                style={{\n                  position: \"absolute\",\n                  background: \"rgb(200, 200, 200)\",\n                  width: \"500px\",\n                }}\n              >\n                <Spin tip=\"Waiting for friend to join Game ...\" />\n                <Statistic title=\"Game ID\" value={gameId} />\n              </Card>\n            ) : (\n              <></>\n            )\n          ) : (\n            <Form\n              style={{\n                position: \"absolute\",\n                background: \"rgb(200, 200, 200)\",\n                width: \"500px\",\n              }}\n              {...layout}\n              form={form}\n              layout=\"horizontal\"\n              name=\"friendGameForm\"\n              initialValues={{ activity: \"createGame\", time: \"3\" }}\n              onValuesChange={onActivityChange}\n              onFinish={onFinish}\n            >\n              <Form.Item label=\"\" name=\"activity\">\n                <Radio.Group value=\"createGame\">\n                  <Radio.Button value=\"createGame\">Create Game</Radio.Button>\n                  <Radio.Button value=\"joinGame\">Join Game</Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n\n              <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                  { required: true, message: \"Please input your username!\" },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              {activity === \"createGame\" ? (\n                <>\n                  <Form.Item\n                    name=\"stakedAmount\"\n                    label=\"Stake Amount\"\n                    rules={[{ required: true }]}\n                  >\n                    <Select\n                      placeholder=\"Select amount of coins to leverage \"\n                      allowClear\n                    >\n                      <Select.Option value=\"0\">0 TNBC</Select.Option>\n\n                      <Select.Option value=\"50\">50 TNBC</Select.Option>\n\n                      <Select.Option value=\"100\">100 TNBC</Select.Option>\n                      <Select.Option value=\"250\">200 TNBC</Select.Option>\n                      <Select.Option value=\"500\">500 TNBC</Select.Option>\n\n                      <Select.Option value=\"1000\">1000 TNBC</Select.Option>\n                    </Select>\n                  </Form.Item>\n\n                  <Form.Item label=\"Time\" name=\"time\">\n                    <Radio.Group value={\"3\"}>\n                      <Radio.Button value=\"1\">1 min</Radio.Button>\n                      <Radio.Button value=\"2\">2 min</Radio.Button>\n                      <Radio.Button value=\"3\">3 min</Radio.Button>\n                      <Radio.Button value=\"5\">5 min</Radio.Button>\n                      <Radio.Button value=\"10\">10 min</Radio.Button>\n                    </Radio.Group>\n                  </Form.Item>\n                </>\n              ) : (\n                <Form.Item\n                  name=\"gameId\"\n                  label=\"Game ID\"\n                  rules={[{ required: true }]}\n                >\n                  <Input />\n                </Form.Item>\n              )}\n\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  {activity === \"createGame\" ? \"Create Game\" : \"Join Game\"}\n                </Button>\n              </Form.Item>\n            </Form>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default TwoPlayerBoard;\n","import React, { FC, useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport FriendBoard from \"containers/FriendBoard\";\n\nimport BotVBotBoard from \"containers/BotVBotBoard\";\nimport ReplayGameBoard from \"containers/ReplayGameBoard\";\n\nimport CreateGameForm from \"components/CreateGameForm\";\nimport { TwoPlayerBoard } from \"containers/Boards\";\nimport { classic } from \"designs/pieces\";\nimport { BoardClass } from \"types/Board\";\n\nimport { BoardContext } from \"context/Board\";\n\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Move } from \"chess\";\n\nimport {\n  Account,\n  Bank,\n  ConfirmationValidator,\n  PrimaryValidator,\n} from \"thenewboston/src\";\n\ninterface Game {\n  _id: string;\n  players: { white: string; black: string };\n  moveHistory: Move[];\n}\n\nfunction App() {\n  const [boardType, setBoardType] = useState(\"\");\n\n  const [games, setGames] = useState<Game[]>();\n\n  const [selectedGame, setSelectedGame] = useState<Game>();\n\n  // useEffect(() => {\n  //   const SERVER = \"http://localhost:8080\";\n  //   axios.get(`${SERVER}/games`).then((res) => {\n  //     setGames(res.data);\n  //   });\n\n  //   console.log(Bank);\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          <button onClick={() => setBoardType(\"friend\")}>Play Friend</button>\n          <button onClick={() => setBoardType(\"online\")}>Play Online</button>\n          <button onClick={() => setBoardType(\"tournament\")}>\n            Play Tournament\n          </button>\n          <button onClick={() => setBoardType(\"botVbot\")}>Bot Vs Bot</button>\n          <button onClick={() => setBoardType(\"watch\")}>Watch Game</button>\n        </div>\n        {/* <BoardContext.Provider> */}\n        {boardType === \"friend\" ? (\n          <>{/* <FriendBoard />\n            <CreateGameForm /> */}</>\n        ) : boardType === \"botVbot\" ? (\n          {\n            /* <BotVBotBoard />*/\n          }\n        ) : boardType === \"online\" ? (\n          <TwoPlayerBoard />\n        ) : boardType === \"tournament\" ? (\n          <div>Coming Soon!</div>\n        ) : boardType === \"watch\" ? (\n          <div>\n            {\" \"}\n            {games?.map((game: any) => {\n              return (\n                <>\n                  {selectedGame !== undefined ? (\n                    {\n                      /* <ReplayGameBoard game={selectedGame} />*/\n                    }\n                  ) : (\n                    <></>\n                  )}\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      margin: \"10px\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        margin: \"5px\",\n                        borderRadius: \"3px\",\n                        backgroundColor: \"lightblue\",\n                        padding: \"5px 10px\",\n                        cursor: \"pointer\",\n                        fontSize: \"small\",\n                        color: \"black\",\n                      }}\n                      onClick={() => {\n                        console.log({ game });\n                        setSelectedGame(game);\n                      }}\n                    >\n                      Game ID: {game._id}\n                    </div>\n                  </div>\n                </>\n              );\n            })}\n          </div>\n        ) : (\n          <></>\n        )}\n\n        {/* </BoardContext.Provider> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}